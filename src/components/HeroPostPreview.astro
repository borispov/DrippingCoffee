---

export interface Props {
	title: string;
	description: string;
	publishDate: string;
	url: string;
	position: string;
	backgroundImage: string;
}

const { title, description, publishDate, url, backgroundImage, position } = Astro.props as Props;
---


	<a style={{
			gridArea: position
		}}
		href={url} 
		class="article post-preview">
		<!-- <div class="post-img">
			<div class="overlay"></div> -->
		<img src={backgroundImage} alt={title}>
		<!-- </div> -->

		<div class="contents">
			<h1 class="title">{title}</h1>
			<p>{description}</p>
		</div>
	</a>

<style lang="scss">
	.post-img {
		max-width: 380px;
	}

	.overlay {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: #191919;
		opacity: 0.75;
		z-index: -2;
		transition: all 100ms ease-in-out;
		box-shadow: 4px 4px 0px #781A1A;
		border-radius: 12px;
	}

	.article {
		// box-shadow: 4px 4px 0px #781A1A;
		// border-radius: 12px;
	}

	.article:hover {
		.overlay {
			background-color: #000;
		}
	}

	img {
		border-radius: 12px;
		width: 100%;
		height: 100%;
		z-index: -1;
		object-fit: cover;
		opacity: 0.9;
	}

	.contents {
		padding-left: 20px;
		padding-top: 20px;
	}

	.post-preview {
		position: relative;
		margin-bottom: 2rem;
		display: flex;
		flex-direction: column;
		justify-content: center;
	}

	.title,
	time {
		margin: 0;
	}

	time {
		font-size: 1rem;
		color: var(--color-gray-200);
		color: var(--color-gray-500);
		font-style: italic;
	}

	.title {
		font-size: 2.15rem;
		font-weight: 400;
		color: #fff;
		color: #010101;
		max-width: 25ch;
	}
	
	p {
		color: #f9f9f9;
		color: #010101;
	}

	a, a:hover {
		text-decoration: none;
	}

	a.more {
		display: inline;
		text-decoration: underline;
		text-decoration-color: var(--theme-bg-paper);
	}

</style>